USE SUPPLYCHAINDB;

-- VIEW PROJECT_BY_CUSTOMER
CREATE VIEW PROJECT_BY_CUSTOMER AS 
    SELECT C.CUST_ID AS CUSTOMER_ID, 
        C.CUST_NAME AS CUSTOMER_NAME, 
        P.PROG_NAME AS PROGRAM_NAME,
        P.PROG_ID AS PROGRAM_ID, 
        P.PROG_START AS PROGRAM_START, 
        P.PROG_END AS PROGRAM_END,
        P.PROG_STATUS AS PROGRAM_STATUS,
        P.AVG_PROD_WEEKLY AS AVG_PROD_WEEKLY,
        P.MAX_PROD_WEEKLY AS MAX_PROD_WEEKLY
    FROM SupplyChainDB.CUSTOMER C 
        LEFT OUTER JOIN SupplyChainDB.PROGRAMS P
   ON C.CUST_ID = P.CUST_ID; 

-- ----------------------------------------------------------------------------
-- VIEW APPROVAL_WITH_EMPLOYEE
CREATE VIEW APPROVAL_WITH_EMPLOYEE AS
SELECT 
        A.PART_APPR_ID AS APPROVAL_ID, 
        A.PART_ID AS PART_ID, A.SUPP_ID, 
        A.APP_STATUS AS STATUS,
        A.SUBMIT_DATE, 
        A.APP_DATE AS STATUS_DATE, 
        A.APP_COST AS COST,
        E.EMP_ID AS APP_EMP_ID, 
        E.EMP_NAME AS EMP_NAME 
        FROM SupplyChainDB.APPROVAL_DETAILS A 
        LEFT OUTER JOIN SupplyChainDB.EMPLOYEE E 
        ON A.SQE_REP = E.EMP_ID;

-- ----------------------------------------------------------------------------
--  EMPLOYEE WITH MAXIMUM PRODUCT EVALUATIONS
-- SELECT APPROVAL STATS BY EMPLOYEE
CREATE VIEW EVALUATION_STATS_EMPLOYEE AS
	SELECT DISTINCT 
		A.APP_EMP_ID, 
		A.EMP_NAME, 
		IFNULL(X.APPROVED,0) AS APPROVED, 
		IFNULL(D.DENIED,0) AS DENIED, 
		IFNULL(P.PENDING,0) AS PENDING,
		T.EVALUATION_DURATION AS AVG_EVALUATION_TIME
	FROM SupplyChainDB.APPROVAL_WITH_EMPLOYEE A 
		LEFT JOIN (
			SELECT APP_EMP_ID, EMP_NAME, COUNT(*) AS APPROVED FROM APPROVAL_WITH_EMPLOYEE
				WHERE STATUS = 'APPROVED'
				GROUP BY APP_EMP_ID, EMP_NAME
			) X ON A.APP_EMP_ID = X.APP_EMP_ID
		LEFT JOIN(
			SELECT APP_EMP_ID, EMP_NAME, COUNT(*) AS DENIED FROM APPROVAL_WITH_EMPLOYEE
				WHERE STATUS = 'DENIED'
				GROUP BY APP_EMP_ID, EMP_NAME
		) D ON A.APP_EMP_ID = X.APP_EMP_ID
		LEFT JOIN(
			SELECT APP_EMP_ID, EMP_NAME, COUNT(*) AS PENDING FROM APPROVAL_WITH_EMPLOYEE
				WHERE STATUS = 'PENDING'
				GROUP BY APP_EMP_ID, EMP_NAME
		) P ON A.APP_EMP_ID = P.APP_EMP_ID
		LEFT JOIN(
				SELECT APP_EMP_ID, EMP_NAME, ROUND(SUM(DATEDIFF(STATUS_DATE,SUBMIT_DATE))) AS EVALUATION_DURATION FROM SupplyChainDB.APPROVAL_WITH_EMPLOYEE 
					WHERE STATUS != 'PENDING'
					GROUP BY APP_EMP_ID, EMP_NAME
			) T ON A.APP_EMP_ID = T.APP_EMP_ID
			ORDER BY AVG_EVALUATION_TIME;

-- ----------------------------------------------------------------------------
-- VIEW APPROVAL_WITH_SUPPLIER
CREATE VIEW APPROVAL_WITH_SUPPLIER AS
	SELECT 
		A.PART_APPR_ID AS APPROVAL_ID, 
		A.PART_ID AS PART_ID, 
		A.SUPP_ID AS SUPPLIER_ID, 
		S.SUPP_NAME AS SUPPLIER_NAME, 
		A.APP_STATUS AS STATUS, 
		A.APP_DATE AS STATUS_DATE 
	FROM APPROVAL_DETAILS A 
		LEFT OUTER JOIN SUPPLIER S 
		ON A.SUPP_ID = S.SUPP_ID;

-- ----------------------------------------------------------------------------
-- EVALUATION_STATS_SUPPLIER
CREATE VIEW EVALUATION_STATS_SUPPLIER AS
    SELECT DISTINCT  
		S.SUPPLIER_ID, 
		S.SUPPLIER_NAME , 
		IFNULL(A.APPROVED,0) AS APPROVED, 
		IFNULL(D.DENIED,0) AS DENIED ,
		IFNULL(P.PENDING,0) AS PENDING 
	FROM APPROVAL_WITH_SUPPLIER S 
		LEFT JOIN(
			SELECT SUPPLIER_ID, COUNT(*) AS APPROVED FROM APPROVAL_WITH_SUPPLIER
				WHERE STATUS = 'APPROVED'
				GROUP BY SUPPLIER_ID
		) A ON S.SUPPLIER_ID = A.SUPPLIER_ID
		LEFT JOIN(
			SELECT SUPPLIER_ID, COUNT(*) AS DENIED FROM APPROVAL_WITH_SUPPLIER
				WHERE STATUS = 'DENIED'
				GROUP BY SUPPLIER_ID
		) D ON S.SUPPLIER_ID = D.SUPPLIER_ID
		LEFT JOIN(
			SELECT SUPPLIER_ID, COUNT(*) AS PENDING FROM APPROVAL_WITH_SUPPLIER
				WHERE STATUS = 'PENDING'
				GROUP BY SUPPLIER_ID
		) P ON S.SUPPLIER_ID = P.SUPPLIER_ID ;
        
-- ------------------------------------------------------------------------------
-- VIEW PART_APPROVAL_SUPPLIER
CREATE VIEW PART_APPROVAL_SUPPLIER
AS
    SELECT 
        P.PART_ID AS PART_ID, 
        P.PART_NAME AS PART_NAME, 
        P.COMMODITY AS COMMODITY, 
        P.STATUS AS PART_STATUS, 
        P.QTY_UNIT AS QTY_UNIT, 
        AWS.SUPPLIER_ID AS SUPPLIER_ID, 
        AWS.SUPPLIER_NAME AS SUPPLIER_NAME, 
        AWS.STATUS AS APPROVAL_STATUS ,
        AWS.STATUS_DATE AS APPROVAL_STATUS_DATE 
    FROM PART P 
        LEFT JOIN  APPROVAL_WITH_SUPPLIER AWS
            ON P.PART_ID = AWS.PART_ID; 

-- ----------------------------------------------------------------------------
-- VIEW ACTIVE_SUPPLIER
CREATE VIEW ACTIVE_SUPPLIER AS
	SELECT S.SUPP_ID AS SUPPLIER_ID, 
		S.SUPP_NAME AS SUPPLIER_NAME,  
		SC.SUPP_EMP_NAME AS EMPLOYEE_NAME, 
		SC.SUPP_EMP_EMAIL AS EMAIL, 
		SC.SUPP_EMP_PHONE AS PHONE_NO, 
		SC.SUPP_EMP_START AS START_DATE 
	FROM 
		SUPPLIER S LEFT JOIN SUPPLIER_CONTACT SC 
		ON S.SUPP_ID = SC.SUPP_ID
		WHERE SC.SUPP_EMP_END IS NULL;

-- ----------------------------------------------------------------------------
-- INVENTORY FLOW STATUS
CREATE VIEW INVENTORY_FLOW_STATUS AS
    SELECT 
        P.PART_ID, 
        P.PART_NAME,  
        P.INVENTORY,
        P.COMMODITY,
        O.OUT_APW,
        I.IN_APW,
        O.OUT_MPW,
        I.IN_MPW,
        P.QTY_UNIT
    FROM SupplyChainDB.PART P
        LEFT JOIN(
            SELECT 
            PART_REQ.PART_ID, 
            IFNULL(SUM(IFNULL(P.AVG_PROD_WEEKLY,0) * IFNULL(PART_REQ.REQ,0)),0) AS OUT_APW,
            SUM(IFNULL(P.MAX_PROD_WEEKLY,0) * IFNULL(PART_REQ.REQ,0)) AS OUT_MPW
            FROM SupplyChainDB.PROGRAMS P 
            LEFT JOIN
            (
                SELECT 
                    PROG_ID, 
                    PART_ID, 
                    SUM(QTY_FACTOR) AS REQ 
                    FROM SupplyChainDB.PROGRAM_PART 
                    GROUP BY PROG_ID,PART_ID
            ) PART_REQ 
            ON P.PROG_ID = PART_REQ.PROG_ID
            WHERE P.PROG_STATUS IN ('OPEN') AND PART_REQ.PART_ID IS NOT NULL
            GROUP BY PART_REQ.PART_ID
        ) O
        ON P.PART_ID = O.PART_ID
        LEFT JOIN(
            SELECT 
                AP.PART_ID AS PART_id,
                SUM(IFNULL(AP.AVG_PROD_WEEKLY,0)) AS IN_APW,
                SUM(IFNULL(AP.MAX_PROD_WEEKLY,0)) AS IN_MPW   
                FROM SupplyChainDB.APPROVAL_DETAILS AP
                GROUP BY AP.PART_ID
        ) I
        ON P.PART_ID = I.PART_ID;

-- ----------------------------------------------------------------------------
-- CUSTOMER_PROGRAM_EMPLOYEE
CREATE VIEW CUSTOMER_PROGRAM_EMPLOYEE AS
	SELECT 
        P.CUSTOMER_ID,
        P.CUSTOMER_NAME,
        P.PROGRAM_ID, 
        P.PROGRAM_NAME,
        P.PROGRAM_STATUS,
        P.PROGRAM_START,
        P.PROGRAM_END,
        EMP.EMP_ID,
        EMP.EMP_NAME,
        EMP.EMP_START_DATE,
        EMP.EMP_END_DATE,
        EMP.DESIGNATION
    FROM SupplyChainDB.PROJECT_BY_CUSTOMER P
        LEFT JOIN(
            SELECT 
                E.EMP_NAME ,
                EP.DESIGNATION,
                EP.EMP_PROG_ID, 
                EP.EMP_ID, 
                EP.PROG_ID,
                EP.START_DATE AS EMP_START_DATE,
                EP.END_DATE AS EMP_END_DATE
            FROM SupplyChainDB.EMPLOYEE_PROGRAM EP 
                LEFT JOIN SupplyChainDB.EMPLOYEE E 
                ON EP.EMP_ID = E.EMP_ID
        ) EMP
        ON P.PROGRAM_ID = EMP.PROG_ID
        ORDER BY P.CUSTOMER_ID, P.PROGRAM_ID;

-- ----------------------------------------------------------------------------
-- CUSTOMER_PROGRAM_PART
CREATE VIEW CUSTOMER_PROGRAM_PART AS
SELECT 
        PC.CUSTOMER_ID,
        PC.CUSTOMER_NAME,
        PC.PROGRAM_ID, 
        PC.PROGRAM_NAME,
        PROGP.PART_ID,
        PROGP.PART_NAME,
        PROGP.COMMODITY,
        PROGP.OUT_APW,
        PROGP.IN_APW,
        PROGP.OUT_MPW,
        PROGP.IN_MPW
FROM SupplyChainDB.PROJECT_BY_CUSTOMER PC
    LEFT JOIN(
        SELECT 
            PP.PROG_ID, 
            P.PART_ID, 
            P.PART_NAME,
            P.COMMODITY,
            P.OUT_APW,
            P.IN_APW,
            P.OUT_MPW,
            P.IN_MPW
        FROM SupplyChainDB.PROGRAM_PART PP
            LEFT JOIN SupplyChainDB.INVENTORY_FLOW_STATUS P
            ON PP.PART_ID = P.PART_ID) PROGP
            ON PC.PROGRAM_ID = PROGP.PROG_ID
            ORDER BY PC.CUSTOMER_ID;

-- ----------------------------------------------------------------------------
-- CUSTOMER_PROGRAM_INVOICE
CREATE VIEW CUSTOMER_PROGRAM_INVOICE AS
	SELECT 
		PC.CUSTOMER_ID, 
		PC.CUSTOMER_NAME, 
		PC.PROGRAM_ID, 
		PC.PROGRAM_NAME,
		PO.OUT_INV_NO,
		PO.OUT_INV_DATE,
		PO.QUANTITY,
		PO.COST_PER_UNIT,
		PO.COST_UNIT,
		PO.TOTAL_COST
	FROM SupplyChainDB.PROJECT_BY_CUSTOMER PC
		LEFT JOIN (
			SELECT  
				PP.PROG_ID,
				O.OUT_INV_NO,
				O.OUT_INV_DATE,
				O.QUANTITY,
				O.COST_PER_UNIT,
				O.COST_UNIT,
				(O.COST_PER_UNIT * O.QUANTITY) AS TOTAL_COST
			FROM SupplyChainDB.PROGRAM_PART PP
				LEFT JOIN SupplyChainDB.OUTGOING_INVOICE O
				ON PP.PROG_PART_ID = O.PROG_PART_ID
		) PO
		ON PO.PROG_ID = PC.PROGRAM_ID;







