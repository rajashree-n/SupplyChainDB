-- VIEW PROJECT_BY_CUSTOMER
CREATE VIEW PROJECT_BY_CUSTOMER AS
 SELECT C.CUST_ID AS CUSTOMER_ID, C.CUST_NAME AS CUSTOMER_NAME, P.PROG_NAME AS PROGRAM_NAME,P.PROG_ID PROGRAM_ID, P.PROG_START PROGRAM_START, P.PROG_END PROGRAM_END,P.PROG_STATUS PROGRAM_STATUS 
 FROM CUSTOMER C LEFT OUTER JOIN PROGRAMS P
   ON C.CUST_ID = P.CUST_ID; 

SELECT * FROM PROJECT_BY_CUSTOMER;

-- FIND CUSTOMER WHO NEVER STARTED A PROGRAM
SELECT DISTINCT CUSTOMER_ID, CUSTOMER_NAME  FROM PROJECT_BY_CUSTOMER WHERE PROGRAM_ID IS NULL;

-- FIND CUSTOMER WITH NO ACTIVE PROJECT


-- COUNT NUMBER OF PROJECTS PER CUSTOMER
SELECT CUSTOMER_ID, CUSTOMER_NAME, COUNT(*)
    FROM PROJECT_BY_CUSTOMER
    WHERE PROGRAM_ID IS NOT NULL
    GROUP BY customer_id, CUSTOMER_NAME
    ORDER BY COUNT(*) DESC;

-- VIEW APPROVAL_WITH_EMPLOYEE
CREATE VIEW APPROVAL_WITH_EMPLOYEE AS
SELECT A.PART_APPR_ID AS APPROVAL_ID, A.PART_ID AS PART_ID, A.SUPP_ID, A.APP_STATUS AS STATUS, A.APP_DATE AS STATUS_DATE, A.APP_COST AS COST,
E.EMP_ID AS APP_EMP_ID, E.EMP_NAME AS EMP_NAME FROM APPROVAL_DETAILS A LEFT OUTER JOIN EMPLOYEE E ON A.SQE_REP = E.EMP_ID;

SELECT * FROM APPROVAL_WITH_EMPLOYEE;

-- SELECT EMPLOYEE WITH MAXIMUM PRODUCT EVALUATIONS
SELECT APP_EMP_ID, EMP_NAME, COUNT(*) AS EVALUATIONS FROM APPROVAL_WITH_EMPLOYEE 
WHERE STATUS != 'PENDING'
GROUP BY APP_EMP_ID, EMP_NAME
ORDER BY COUNT(*) DESC;

SELECT APP_EMP_ID, EMP_NAME, COUNT(*) AS APPROVED FROM APPROVAL_WITH_EMPLOYEE
WHERE STATUS = 'APPROVED'
GROUP BY APP_EMP_ID, EMP_NAME;

SELECT APP_EMP_ID, EMP_NAME, COUNT(*) AS DENIED FROM APPROVAL_WITH_EMPLOYEE
WHERE STATUS = 'DENIED'
GROUP BY APP_EMP_ID, EMP_NAME;

SELECT APP_EMP_ID, EMP_NAME, COUNT(*) AS PENDING FROM APPROVAL_WITH_EMPLOYEE
WHERE STATUS = 'PENDING'
GROUP BY APP_EMP_ID, EMP_NAME;

-- SELECT APPROVAL STATS BY EMPLOYEE
SELECT DISTINCT A.APP_EMP_ID, A.EMP_NAME , IFNULL(X.APPROVED,0) AS APPROVED, IFNULL(D.DENIED,0) AS DENIED, IFNULL(P.PENDING,0) AS PENDING 
FROM APPROVAL_WITH_EMPLOYEE A 
    LEFT JOIN (
        SELECT APP_EMP_ID, EMP_NAME, COUNT(*) AS APPROVED FROM APPROVAL_WITH_EMPLOYEE
            WHERE STATUS = 'APPROVED'
            GROUP BY APP_EMP_ID, EMP_NAME
        ) X ON A.APP_EMP_ID = X.APP_EMP_ID
    LEFT JOIN(
        SELECT APP_EMP_ID, EMP_NAME, COUNT(*) AS DENIED FROM APPROVAL_WITH_EMPLOYEE
            WHERE STATUS = 'DENIED'
            GROUP BY APP_EMP_ID, EMP_NAME
    ) D ON A.APP_EMP_ID = X.APP_EMP_ID
    LEFT JOIN(
        SELECT APP_EMP_ID, EMP_NAME, COUNT(*) AS PENDING FROM APPROVAL_WITH_EMPLOYEE
            WHERE STATUS = 'PENDING'
            GROUP BY APP_EMP_ID, EMP_NAME
    ) P ON A.APP_EMP_ID = P.APP_EMP_ID;
-- ------------------------------------------------------------------------------
-- VIEW APPROVAL_WITH_SUPPLIER
CREATE VIEW APPROVAL_WITH_SUPPLIER AS
SELECT A.PART_APPR_ID AS APPROVAL_ID, A.PART_ID AS PART_ID, A.SUPP_ID AS SUPPLIER_ID, S.SUPP_NAME AS SUPPLIER_NAME, A.APP_STATUS AS STATUS, A.APP_DATE AS STATUS_DATE 
FROM APPROVAL_DETAILS A LEFT OUTER JOIN SUPPLIER S ON A.SUPP_ID = S.SUPP_ID;

SELECT SUPPLIER_ID, COUNT(*) AS APPROVED FROM APPROVAL_WITH_SUPPLIER
WHERE STATUS = 'APPROVED'
GROUP BY SUPPLIER_ID;

SELECT SUPPLIER_ID, COUNT(*) AS PENDING FROM APPROVAL_WITH_SUPPLIER
WHERE STATUS = 'PENDING'
GROUP BY SUPPLIER_ID;

SELECT SUPPLIER_ID, COUNT(*) AS DENIED FROM APPROVAL_WITH_SUPPLIER
WHERE STATUS = 'DENIED'
GROUP BY SUPPLIER_ID;

SELECT DISTINCT S.SUPPLIER_ID, S.SUPPLIER_NAME , IFNULL(A.APPROVED,0) AS APPROVED, IFNULL(D.DENIED,0) AS DENIED ,IFNULL(P.PENDING,0) AS PENDING FROM APPROVAL_WITH_SUPPLIER S 
    LEFT JOIN(
        SELECT SUPPLIER_ID, COUNT(*) AS APPROVED FROM APPROVAL_WITH_SUPPLIER
            WHERE STATUS = 'APPROVED'
            GROUP BY SUPPLIER_ID
    ) A ON S.SUPPLIER_ID = A.SUPPLIER_ID
    LEFT JOIN(
        SELECT SUPPLIER_ID, COUNT(*) AS DENIED FROM APPROVAL_WITH_SUPPLIER
            WHERE STATUS = 'DENIED'
            GROUP BY SUPPLIER_ID
    ) D ON S.SUPPLIER_ID = D.SUPPLIER_ID
    LEFT JOIN(
        SELECT SUPPLIER_ID, COUNT(*) AS PENDING FROM APPROVAL_WITH_SUPPLIER
            WHERE STATUS = 'PENDING'
            GROUP BY SUPPLIER_ID
    ) P ON S.SUPPLIER_ID = P.SUPPLIER_ID 
    ;
-- ------------------------------------------------------------------------------
SELECT AWS.PART_ID, AWS.STATUS, AWS.STATUS_DATE, P.PART_NAME, P.COMMODITY, P.QTY_UNIT, P.STATUS AS PART_STATUS 
FROM APPROVAL_WITH_SUPPLIER AWS LEFT OUTER JOIN PART P ON AWS.PART_ID = P.PART_ID;

-- VIEW PART_APPROVAL_SUPPLIER
CREATE VIEW PART_APPROVAL_SUPPLIER
AS
    SELECT 
        P.PART_ID AS PART_ID, 
        P.PART_NAME AS PART_NAME, 
        P.COMMODITY AS COMMODITY, 
        P.STATUS AS PART_STATUS, 
        P.QTY_UNIT AS QTY_UNIT, 
        AWS.SUPPLIER_ID AS SUPPLIER_ID, 
        AWS.SUPPLIER_NAME AS SUPPLIER_NAME, 
        AWS.STATUS AS APPROVAL_STATUS ,
        AWS.STATUS_DATE AS APPROVAL_STATUS_DATE 
    FROM PART P 
        LEFT JOIN  APPROVAL_WITH_SUPPLIER AWS
            ON P.PART_ID = AWS.PART_ID
; 

SELECT * FROM PART_APPROVAL_SUPPLIER;

SELECT 
    PART_ID , 
    PART_NAME,
    COUNT(*) NUMBER_OF_SUPPLIERS
FROM PART_APPROVAL_SUPPLIER 
    WHERE PART_STATUS = 'OPEN' AND APPROVAL_STATUS = 'APPROVED'
    GROUP BY PART_ID, PART_NAME
    ORDER BY COUNT(*) DESC;

-- VIEW ACTIVE_SUPPLIER
CREATE VIEW ACTIVE_SUPPLIER AS
SELECT S.SUPP_ID AS SUPPLIER_ID, 
    S.SUPP_NAME AS SUPPLIER_NAME,  
	SC.SUPP_EMP_NAME AS EMPLOYEE_NAME, 
	SC.SUPP_EMP_EMAIL AS EMAIL, 
	SC.SUPP_EMP_PHONE AS PHONE_NO, 
    SC.SUPP_EMP_START AS START_DATE FROM 
SUPPLIER S LEFT JOIN SUPPLIER_CONTACT SC 
ON S.SUPP_ID=SC.SUPP_ID
WHERE SC.SUPP_EMP_END is null;

SELECT * FROM ACTIVE_SUPPLIER;

SELECT
	PAS.PART_ID,
	PAS.PART_NAME,
	PAS.PART_STATUS,
	PAS.SUPPLIER_NAME,
	ASUP.EMPLOYEE_NAME,
	PAS.SUPPLIER_ID,
	ASUP.EMAIL,
	ASUP.PHONE_NO
FROM
	PART_APPROVAL_SUPPLIER PAS LEFT OUTER JOIN ACTIVE_SUPPLIER ASUP
	ON PAS.SUPPLIER_ID = ASUP.SUPPLIER_ID;